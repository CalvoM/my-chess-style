services:
  pg_server:
    image: "postgres:latest"
    container_name: "my_chess_style_pg"
    ports:
      - "5429:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

  rabbitmq_server:
    image: "rabbitmq:4.0.2-management"
    container_name: "my_chess_style_rmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER} # Load from .env
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS} # Load from .env
    restart: unless-stopped
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq/

  cache:
    image: "redis:latest"
    container_name: "my_chess_style_cache"
    ports:
      - "6379:6379"
    env_file:
      - .env
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${CACHE_PASSWORD}"]
    volumes:
      - cachedata:/data

  prometheus:
    image: "prom/prometheus"
    container_name: "my_chess_style_prom"
    env_file:
      - .env
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./observability/prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: "grafana/grafana"
    container_name: "my_chess_style_graf"
    env_file:
      - .env
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_DEFAULT_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_DEFAULT_PASS}
    volumes:
      - ./observability/grafana:/etc/grafana/provisioning/datasources

  pg_explorer:
    image: "prometheuscommunity/postgres-exporter"
    container_name: "my_chess_style_pg_explorer"
    env_file:
      - .env
    ports:
      - 9187:9187
    depends_on:
      pg_server:
        condition: service_healthy
      prometheus:
        condition: service_started
    restart: unless-stopped

networks:
  default:
    external: true
    name: my-chess-style-net
volumes:
  pgdata:
  rabbitmqdata:
  cachedata:
  prom_data:
